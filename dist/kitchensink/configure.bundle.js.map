{"version":3,"file":"configure.bundle.js","mappings":"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","sources":["webpack://extension-kitchensink/../../../node_modules/@looker/components/Button/ButtonOutline.js","webpack://extension-kitchensink/./src/components/Configure/Configure.tsx","webpack://extension-kitchensink/./src/components/SandboxStatus/SandboxStatus.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { ButtonBase } from './ButtonBase';\nexport var ButtonOutline = styled(ButtonBase).withConfig({\n  displayName: \"ButtonOutline\",\n  componentId: \"sc-ncggc7-0\"\n})([\"background:\", \";border:1px solid \", \";color:\", \";&[aria-expanded='true']{background:\", \";border-color:\", \";color:\", \";}\"], function (_ref) {\n  var theme = _ref.theme,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'key' : _ref$color;\n  return theme.colors[\"\".concat(color, \"Text\")];\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.colors.ui3;\n}, function (_ref3) {\n  var theme = _ref3.theme,\n      _ref3$color = _ref3.color,\n      color = _ref3$color === void 0 ? 'key' : _ref3$color;\n  return theme.colors[color];\n}, function (_ref4) {\n  var theme = _ref4.theme,\n      _ref4$color = _ref4.color,\n      color = _ref4$color === void 0 ? 'key' : _ref4$color;\n  return theme.colors[\"\".concat(color, \"Accent\")];\n}, function (_ref5) {\n  var theme = _ref5.theme,\n      _ref5$color = _ref5.color,\n      color = _ref5$color === void 0 ? 'key' : _ref5$color;\n  return theme.colors[\"\".concat(color, \"Focus\")];\n}, function (_ref6) {\n  var theme = _ref6.theme,\n      _ref6$color = _ref6.color,\n      color = _ref6$color === void 0 ? 'key' : _ref6$color;\n  return theme.colors[color];\n});\n//# sourceMappingURL=ButtonOutline.js.map","/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useContext, useEffect, useState } from 'react'\nimport type { ValidationMessages } from '@looker/components'\nimport {\n  Button,\n  ButtonOutline,\n  Form,\n  FieldCheckbox,\n  FieldText,\n  Heading,\n  SpaceVertical,\n  FieldTextArea,\n} from '@looker/components'\nimport type { Looker40SDK } from '@looker/sdk'\nimport type { ExtensionContextData2 } from '@looker/extension-sdk-react'\nimport { ExtensionContext2 } from '@looker/extension-sdk-react'\nimport { SandboxStatus } from '../SandboxStatus'\nimport type { ConfigurationData } from '../../types'\nimport type { ConfigureProps } from './types'\n\nconst Configure: React.FC<ConfigureProps> = ({\n  canPersistContextData,\n  configurationData,\n  updateConfigurationData,\n}) => {\n  const [localConfigurationData, setLocalConfigurationData] =\n    useState<ConfigurationData>({\n      dashboardId: '',\n      exploreId: '',\n      lookId: '',\n    } as ConfigurationData)\n  const extensionContext =\n    useContext<ExtensionContextData2<Looker40SDK>>(ExtensionContext2)\n  const { extensionSDK } = extensionContext\n\n  useEffect(() => {\n    const initialize = async () => {\n      if (canPersistContextData) {\n        try {\n          const contextData = await extensionSDK.refreshContextData()\n          if (contextData) {\n            setLocalConfigurationData(contextData as ConfigurationData)\n          }\n        } catch (error) {\n          console.error('failed to get latest context data', error)\n        }\n      }\n    }\n    setLocalConfigurationData({ ...configurationData })\n    initialize()\n  }, [])\n\n  const toggleApiFunctions = () => {\n    localConfigurationData.showApiFunctions =\n      !localConfigurationData.showApiFunctions\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const toggleCoreSdkFunctions = () => {\n    localConfigurationData.showCoreSdkFunctions =\n      !localConfigurationData.showCoreSdkFunctions\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const toggleEmbedDashboard = () => {\n    localConfigurationData.showEmbedDashboard =\n      !localConfigurationData.showEmbedDashboard\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const toggleEmbedExplore = () => {\n    localConfigurationData.showEmbedExplore =\n      !localConfigurationData.showEmbedExplore\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const toggleEmbedLook = () => {\n    localConfigurationData.showEmbedLook = !localConfigurationData.showEmbedLook\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const toggleExternalApiFunctions = () => {\n    localConfigurationData.showExternalApiFunctions =\n      !localConfigurationData.showExternalApiFunctions\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const toggleMiscFunctions = () => {\n    localConfigurationData.showMiscFunctions =\n      !localConfigurationData.showMiscFunctions\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const validateValue = (value: string): number | string => {\n    if (value.match(/\\d+/g)) {\n      return parseInt(value, 10)\n    } else {\n      return value\n    }\n  }\n\n  const changeDashboardId = (event: React.ChangeEvent<HTMLInputElement>) => {\n    localConfigurationData.dashboardId = validateValue(\n      event.currentTarget.value\n    )\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const changeExploreId = (event: React.ChangeEvent<HTMLInputElement>) => {\n    localConfigurationData.exploreId = event.currentTarget.value\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const changeLookId = (event: React.ChangeEvent<HTMLInputElement>) => {\n    localConfigurationData.lookId = validateValue(event.currentTarget.value)\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const changeThoughtForTheDay = (\n    event: React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    localConfigurationData.thoughtForTheDay = event.currentTarget.value\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const changeImageData = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    localConfigurationData.imageData = event.currentTarget.value\n    setLocalConfigurationData({ ...localConfigurationData })\n  }\n\n  const getValidationMessages = (): ValidationMessages | undefined => {\n    let validationMessages: ValidationMessages | undefined\n    if (typeof localConfigurationData.dashboardId === 'string') {\n      if (!validationMessages) {\n        validationMessages = {}\n      }\n      validationMessages.dashboardId = {\n        type: 'error',\n        message: 'dashboard id is not numeric',\n      }\n    }\n    if (localConfigurationData.exploreId === '') {\n      if (!validationMessages) {\n        validationMessages = {}\n      }\n      validationMessages.exploreId = {\n        type: 'error',\n        message: 'explore id is empty',\n      }\n    }\n    if (typeof localConfigurationData.lookId === 'string') {\n      if (!validationMessages) {\n        validationMessages = {}\n      }\n      validationMessages.lookId = {\n        type: 'error',\n        message: 'look id is not numeric',\n      }\n    }\n    return validationMessages\n  }\n\n  const onConfigChangeSubmit = (event: React.FormEvent) => {\n    event.preventDefault()\n    updateConfigurationData({ ...localConfigurationData })\n  }\n\n  const onConfigResetClick = () => {\n    setLocalConfigurationData({ ...configurationData })\n  }\n\n  const validationMessages = getValidationMessages()\n\n  return (\n    <>\n      <Heading mt=\"xlarge\">Configuration</Heading>\n      <SandboxStatus />\n      <Form\n        width=\"50%\"\n        validationMessages={validationMessages}\n        onSubmit={onConfigChangeSubmit}\n      >\n        <FieldCheckbox\n          label=\"Show api functions\"\n          name=\"showApiFunctions\"\n          checked={localConfigurationData.showApiFunctions}\n          onChange={toggleApiFunctions}\n        />\n        <FieldCheckbox\n          label=\"Show core sdk functions\"\n          name=\"showCoreSdkFunctions\"\n          checked={localConfigurationData.showCoreSdkFunctions}\n          onChange={toggleCoreSdkFunctions}\n        />\n        <FieldCheckbox\n          label=\"Show embed dashboard\"\n          name=\"showEmbedDashboard\"\n          checked={localConfigurationData.showEmbedDashboard}\n          onChange={toggleEmbedDashboard}\n        />\n        <FieldCheckbox\n          label=\"Show embed explore\"\n          name=\"showEmbedExplore\"\n          checked={localConfigurationData.showEmbedExplore}\n          onChange={toggleEmbedExplore}\n        />\n        <FieldCheckbox\n          label=\"Show embed look\"\n          name=\"showEmbedLook\"\n          checked={localConfigurationData.showEmbedLook}\n          onChange={toggleEmbedLook}\n        />\n        <FieldCheckbox\n          label=\"Show external api functions\"\n          name=\"showExternalApiFunctions\"\n          checked={localConfigurationData.showExternalApiFunctions}\n          onChange={toggleExternalApiFunctions}\n        />\n        <FieldCheckbox\n          label=\"Show miscellaneous functions\"\n          name=\"showMiscFunctions\"\n          checked={localConfigurationData.showMiscFunctions}\n          onChange={toggleMiscFunctions}\n        />\n        <FieldText\n          label=\"Dashboard id\"\n          name=\"dashboardId\"\n          value={localConfigurationData.dashboardId}\n          onChange={changeDashboardId}\n        />\n        <FieldText\n          label=\"Explore id\"\n          name=\"exploreId\"\n          value={localConfigurationData.exploreId}\n          onChange={changeExploreId}\n        />\n        <FieldText\n          label=\"Look id\"\n          name=\"lookId\"\n          value={localConfigurationData.lookId}\n          onChange={changeLookId}\n        />\n        <FieldTextArea\n          label=\"Thought for the day\"\n          name=\"thoughtForTheDay\"\n          value={localConfigurationData.thoughtForTheDay || ''}\n          onChange={changeThoughtForTheDay}\n        />\n        <FieldTextArea\n          label=\"Image data\"\n          name=\"imageData\"\n          value={localConfigurationData.imageData || ''}\n          onChange={changeImageData}\n        />\n        {localConfigurationData.imageData && (\n          <img src={localConfigurationData.imageData} />\n        )}\n        <Button disabled={!!validationMessages}>Update configuration</Button>\n      </Form>\n      {canPersistContextData && (\n        <SpaceVertical width=\"50%\">\n          <ButtonOutline onClick={onConfigResetClick}>\n            Reset configuration\n          </ButtonOutline>\n        </SpaceVertical>\n      )}\n    </>\n  )\n}\n\nexport default Configure\n","/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useEffect, useState } from 'react'\nimport { Paragraph } from '@looker/components'\nimport type { SandboxStatusProps } from './types'\n\nexport const SandboxStatus: React.FC<SandboxStatusProps> = () => {\n  const [sandboxStatus, setSandboxStatus] = useState('')\n\n  useEffect(() => {\n    try {\n      const parentWindow: any = (window as any).parent\n      // Attempt to get data from the parent window. This\n      // will fail in a sandboxed environment and in most\n      // cases we want this to fail.\n      // eslint-disable-next-line no-unused-expressions\n      parentWindow.looker?.version\n      setSandboxStatus('NOT')\n    } catch (err) {\n      setSandboxStatus('')\n    }\n  }, [])\n\n  return (\n    <Paragraph my=\"medium\">\n      This extension is <b>{sandboxStatus}</b> sandboxed.\n    </Paragraph>\n  )\n}\n"],"names":["ButtonOutline","withConfig","displayName","componentId","_ref","theme","_ref$color","color","colors","concat","_ref2","ui3","_ref3","_ref3$color","_ref4","_ref4$color","_ref5","_ref5$color","_ref6","_ref6$color","canPersistContextData","configurationData","updateConfigurationData","localConfigurationData","setLocalConfigurationData","useState","dashboardId","exploreId","lookId","extensionContext","useContext","ExtensionContext2","extensionSDK","useEffect","initialize","contextData","refreshContextData","error","console","validateValue","value","match","parseInt","validationMessages","type","message","getValidationMessages","mt","Form","width","onSubmit","event","preventDefault","FieldCheckbox","label","name","checked","showApiFunctions","onChange","showCoreSdkFunctions","showEmbedDashboard","showEmbedExplore","showEmbedLook","showExternalApiFunctions","showMiscFunctions","FieldText","currentTarget","FieldTextArea","thoughtForTheDay","imageData","src","disabled","onClick","SandboxStatus","sandboxStatus","setSandboxStatus","window","parent","looker","version","err","my"],"sourceRoot":""}